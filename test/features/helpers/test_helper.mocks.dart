// Mocks generated by Mockito 5.4.2 from annotations
// in messenger/test/features/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i22;

import 'package:dartz/dartz.dart' as _i14;
import 'package:dio/dio.dart' as _i21;
import 'package:dio/src/adapter.dart' as _i3;
import 'package:dio/src/cancel_token.dart' as _i23;
import 'package:dio/src/dio_mixin.dart' as _i5;
import 'package:dio/src/options.dart' as _i2;
import 'package:dio/src/response.dart' as _i6;
import 'package:dio/src/transformer.dart' as _i4;
import 'package:messenger/core/errors/failures.dart' as _i41;
import 'package:messenger/core/networks/network_info.dart' as _i40;
import 'package:messenger/core/usecase/usecase.dart' as _i44;
import 'package:messenger/features/data/datasources/db/database_helper.dart'
    as _i24;
import 'package:messenger/features/data/datasources/local/group_local_datasource.dart'
    as _i32;
import 'package:messenger/features/data/datasources/local/group_message_local_datasource.dart'
    as _i36;
import 'package:messenger/features/data/datasources/local/group_message_type_local_datasource.dart'
    as _i38;
import 'package:messenger/features/data/datasources/local/group_user_local_datasource.dart'
    as _i34;
import 'package:messenger/features/data/datasources/local/message_local_datasource.dart'
    as _i30;
import 'package:messenger/features/data/datasources/local/user_local_datasource.dart'
    as _i27;
import 'package:messenger/features/data/datasources/remote/group_message_remote_datasource.dart'
    as _i37;
import 'package:messenger/features/data/datasources/remote/group_message_type_remote_datasource.dart'
    as _i39;
import 'package:messenger/features/data/datasources/remote/group_remote_datasource.dart'
    as _i33;
import 'package:messenger/features/data/datasources/remote/group_user_remote_datasource.dart'
    as _i35;
import 'package:messenger/features/data/datasources/remote/message_remote_datasource.dart'
    as _i31;
import 'package:messenger/features/data/datasources/remote/user_remote_datasource.dart'
    as _i28;
import 'package:messenger/features/data/models/sms_model.dart' as _i29;
import 'package:messenger/features/data/models/user_model.dart' as _i13;
import 'package:messenger/features/domain/entities/group_entity.dart' as _i9;
import 'package:messenger/features/domain/entities/group_message_entity.dart'
    as _i11;
import 'package:messenger/features/domain/entities/group_message_type_entity.dart'
    as _i12;
import 'package:messenger/features/domain/entities/group_user_entity.dart'
    as _i10;
import 'package:messenger/features/domain/entities/message_entity.dart' as _i8;
import 'package:messenger/features/domain/entities/user_entity.dart' as _i7;
import 'package:messenger/features/domain/repositories/group_message_repository.dart'
    as _i19;
import 'package:messenger/features/domain/repositories/group_message_type_repository.dart'
    as _i20;
import 'package:messenger/features/domain/repositories/group_repository.dart'
    as _i17;
import 'package:messenger/features/domain/repositories/group_user_repository.dart'
    as _i18;
import 'package:messenger/features/domain/repositories/message_repository.dart'
    as _i16;
import 'package:messenger/features/domain/repositories/user_repository.dart'
    as _i15;
import 'package:messenger/features/domain/usecases/group_message_type_usecases/exist_group_message_type_local_usecase.dart'
    as _i93;
import 'package:messenger/features/domain/usecases/group_message_type_usecases/get_all_group_message_types_local_usecase.dart'
    as _i94;
import 'package:messenger/features/domain/usecases/group_message_type_usecases/get_all_group_message_types_remote_usecase.dart'
    as _i95;
import 'package:messenger/features/domain/usecases/group_message_type_usecases/get_all_notread_group_message_types_local_usecase.dart'
    as _i96;
import 'package:messenger/features/domain/usecases/group_message_type_usecases/get_all_unsend_group_message_types_local_usecase.dart'
    as _i97;
import 'package:messenger/features/domain/usecases/group_message_type_usecases/get_group_message_type_local_usecase.dart'
    as _i98;
import 'package:messenger/features/domain/usecases/group_message_type_usecases/get_group_message_type_remote_usecase.dart'
    as _i99;
import 'package:messenger/features/domain/usecases/group_message_type_usecases/remove_group_message_type_local_usecase.dart'
    as _i100;
import 'package:messenger/features/domain/usecases/group_message_type_usecases/remove_group_message_type_remote_usecase.dart'
    as _i101;
import 'package:messenger/features/domain/usecases/group_message_type_usecases/save_group_message_type_local_usecase.dart'
    as _i102;
import 'package:messenger/features/domain/usecases/group_message_type_usecases/save_group_message_type_remote_usecase.dart'
    as _i103;
import 'package:messenger/features/domain/usecases/group_message_type_usecases/update_all_group_message_types_remote_usecase.dart'
    as _i104;
import 'package:messenger/features/domain/usecases/group_message_usecases/exist_group_message_local_usecase.dart'
    as _i81;
import 'package:messenger/features/domain/usecases/group_message_usecases/get_all_group_messages_local_usecase.dart'
    as _i82;
import 'package:messenger/features/domain/usecases/group_message_usecases/get_all_group_messages_remote_usecase.dart'
    as _i83;
import 'package:messenger/features/domain/usecases/group_message_usecases/get_all_unsend_group_messages_local_usecase.dart'
    as _i84;
import 'package:messenger/features/domain/usecases/group_message_usecases/get_group_message_local_usecase.dart'
    as _i85;
import 'package:messenger/features/domain/usecases/group_message_usecases/get_group_message_remote_usecase.dart'
    as _i86;
import 'package:messenger/features/domain/usecases/group_message_usecases/get_missed_group_messages_remote_usecase.dart'
    as _i87;
import 'package:messenger/features/domain/usecases/group_message_usecases/remove_group_message_local_usecase.dart'
    as _i88;
import 'package:messenger/features/domain/usecases/group_message_usecases/remove_group_message_remote_usecase.dart'
    as _i89;
import 'package:messenger/features/domain/usecases/group_message_usecases/save_group_message_local_usecase.dart'
    as _i90;
import 'package:messenger/features/domain/usecases/group_message_usecases/save_group_message_remote_usecase.dart'
    as _i91;
import 'package:messenger/features/domain/usecases/group_message_usecases/update_all_group_messages_remote_usecase.dart'
    as _i92;
import 'package:messenger/features/domain/usecases/group_usecases/get_all_groups_local_usecase.dart'
    as _i66;
import 'package:messenger/features/domain/usecases/group_usecases/get_all_groups_remote_usecase.dart'
    as _i67;
import 'package:messenger/features/domain/usecases/group_usecases/get_group_local_usecase.dart'
    as _i68;
import 'package:messenger/features/domain/usecases/group_usecases/get_group_remote_usecase.dart'
    as _i69;
import 'package:messenger/features/domain/usecases/group_usecases/remove_group_local_usecase.dart'
    as _i70;
import 'package:messenger/features/domain/usecases/group_usecases/save_group_local_usecase.dart'
    as _i71;
import 'package:messenger/features/domain/usecases/group_usecases/save_group_remote_usecase.dart'
    as _i72;
import 'package:messenger/features/domain/usecases/group_user_usecases/get_all_group_users_by_phone_number_remote_usecase.dart'
    as _i73;
import 'package:messenger/features/domain/usecases/group_user_usecases/get_all_group_users_local_usecase.dart'
    as _i74;
import 'package:messenger/features/domain/usecases/group_user_usecases/get_all_group_users_remote_usecase.dart'
    as _i75;
import 'package:messenger/features/domain/usecases/group_user_usecases/get_group_user_local_usecase.dart'
    as _i76;
import 'package:messenger/features/domain/usecases/group_user_usecases/remove_group_user_local_usecase.dart'
    as _i77;
import 'package:messenger/features/domain/usecases/group_user_usecases/remove_group_user_remote_usecase.dart'
    as _i78;
import 'package:messenger/features/domain/usecases/group_user_usecases/save_group_user_local_usecase.dart'
    as _i79;
import 'package:messenger/features/domain/usecases/group_user_usecases/save_group_user_remote_usecase.dart'
    as _i80;
import 'package:messenger/features/domain/usecases/message_usecases/exist_message_local_usecase.dart'
    as _i53;
import 'package:messenger/features/domain/usecases/message_usecases/get_all_messages_local_usecase.dart'
    as _i54;
import 'package:messenger/features/domain/usecases/message_usecases/get_all_messages_remote_usecase.dart'
    as _i55;
import 'package:messenger/features/domain/usecases/message_usecases/get_all_notread_messages_local_usecase.dart'
    as _i56;
import 'package:messenger/features/domain/usecases/message_usecases/get_all_unsend_messages_local_usecase.dart'
    as _i57;
import 'package:messenger/features/domain/usecases/message_usecases/get_message_local_usecase.dart'
    as _i58;
import 'package:messenger/features/domain/usecases/message_usecases/get_message_remote_usecase.dart'
    as _i59;
import 'package:messenger/features/domain/usecases/message_usecases/get_missed_messages_remote_usecase.dart'
    as _i60;
import 'package:messenger/features/domain/usecases/message_usecases/remove_message_local_usecase.dart'
    as _i61;
import 'package:messenger/features/domain/usecases/message_usecases/remove_message_remote_usecase.dart'
    as _i62;
import 'package:messenger/features/domain/usecases/message_usecases/save_message_local_usecase.dart'
    as _i63;
import 'package:messenger/features/domain/usecases/message_usecases/save_message_remote_usecase.dart'
    as _i64;
import 'package:messenger/features/domain/usecases/message_usecases/update_all_messages_remote_usecase.dart'
    as _i65;
import 'package:messenger/features/domain/usecases/user_usecases/exist_user_local_usecase.dart'
    as _i42;
import 'package:messenger/features/domain/usecases/user_usecases/get_all_users_local_usecase.dart'
    as _i43;
import 'package:messenger/features/domain/usecases/user_usecases/get_all_users_remote_usecase.dart'
    as _i45;
import 'package:messenger/features/domain/usecases/user_usecases/get_user_local_usecase.dart'
    as _i46;
import 'package:messenger/features/domain/usecases/user_usecases/get_user_remote_usecase.dart'
    as _i47;
import 'package:messenger/features/domain/usecases/user_usecases/remove_user_local_usecase.dart'
    as _i48;
import 'package:messenger/features/domain/usecases/user_usecases/save_user_local_usecase.dart'
    as _i49;
import 'package:messenger/features/domain/usecases/user_usecases/save_user_remote_usecase.dart'
    as _i50;
import 'package:messenger/features/domain/usecases/user_usecases/send_sms_verifycode_remote_usecase.dart'
    as _i51;
import 'package:messenger/features/domain/usecases/user_usecases/set_user_lastseen_datetime_remote_usecase.dart'
    as _i52;
import 'package:messenger/objectbox.g.dart' as _i25;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i26;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseOptions_0 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_1 extends _i1.SmartFake
    implements _i3.HttpClientAdapter {
  _FakeHttpClientAdapter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_2 extends _i1.SmartFake implements _i4.Transformer {
  _FakeTransformer_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_3 extends _i1.SmartFake implements _i5.Interceptors {
  _FakeInterceptors_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4<T1> extends _i1.SmartFake implements _i6.Response<T1> {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserEntity_5 extends _i1.SmartFake implements _i7.UserEntity {
  _FakeUserEntity_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMessageEntity_6 extends _i1.SmartFake implements _i8.MessageEntity {
  _FakeMessageEntity_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGroupEntity_7 extends _i1.SmartFake implements _i9.GroupEntity {
  _FakeGroupEntity_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGroupUserEntity_8 extends _i1.SmartFake
    implements _i10.GroupUserEntity {
  _FakeGroupUserEntity_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGroupMessageEntity_9 extends _i1.SmartFake
    implements _i11.GroupMessageEntity {
  _FakeGroupMessageEntity_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGroupMessageTypeEntity_10 extends _i1.SmartFake
    implements _i12.GroupMessageTypeEntity {
  _FakeGroupMessageTypeEntity_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_11 extends _i1.SmartFake implements _i13.UserModel {
  _FakeUserModel_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_12<L, R> extends _i1.SmartFake implements _i14.Either<L, R> {
  _FakeEither_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserRepository_13 extends _i1.SmartFake
    implements _i15.UserRepository {
  _FakeUserRepository_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMessageRepository_14 extends _i1.SmartFake
    implements _i16.MessageRepository {
  _FakeMessageRepository_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGroupRepository_15 extends _i1.SmartFake
    implements _i17.GroupRepository {
  _FakeGroupRepository_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGroupUserRepository_16 extends _i1.SmartFake
    implements _i18.GroupUserRepository {
  _FakeGroupUserRepository_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGroupMessageRepository_17 extends _i1.SmartFake
    implements _i19.GroupMessageRepository {
  _FakeGroupMessageRepository_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGroupMessageTypeRepository_18 extends _i1.SmartFake
    implements _i20.GroupMessageTypeRepository {
  _FakeGroupMessageTypeRepository_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i21.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.BaseOptions);
  @override
  set options(_i2.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i3.HttpClientAdapter);
  @override
  set httpClientAdapter(_i3.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i4.Transformer);
  @override
  set transformer(_i4.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i5.Interceptors);
  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i22.Future<_i6.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i23.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
  @override
  _i22.Future<_i6.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i23.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
  @override
  _i22.Future<_i6.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i23.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
  @override
  _i22.Future<_i6.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i23.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
  @override
  _i22.Future<_i6.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i23.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
  @override
  _i22.Future<_i6.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i23.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
  @override
  _i22.Future<_i6.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i23.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
  @override
  _i22.Future<_i6.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i23.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
  @override
  _i22.Future<_i6.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i23.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
  @override
  _i22.Future<_i6.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i23.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
  @override
  _i22.Future<_i6.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i23.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
  @override
  _i22.Future<_i6.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i23.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
  @override
  _i22.Future<_i6.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i23.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i22.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<dynamic>>);
  @override
  _i22.Future<_i6.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    _i23.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i22.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<dynamic>>);
  @override
  _i22.Future<_i6.Response<T>> request<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i23.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
  @override
  _i22.Future<_i6.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i23.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
  @override
  _i22.Future<_i6.Response<T>> fetch<T>(_i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i22.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i22.Future<_i6.Response<T>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i24.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<_i25.Store?> get store => (super.noSuchMethod(
        Invocation.getter(#store),
        returnValue: _i22.Future<_i25.Store?>.value(),
      ) as _i22.Future<_i25.Store?>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i22.Future<bool> existUserLocal(String? userPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #existUserLocal,
          [userPhoneNumber],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i7.UserEntity>> getAllUsersLocal() => (super.noSuchMethod(
        Invocation.method(
          #getAllUsersLocal,
          [],
        ),
        returnValue:
            _i22.Future<List<_i7.UserEntity>>.value(<_i7.UserEntity>[]),
      ) as _i22.Future<List<_i7.UserEntity>>);
  @override
  _i22.Future<_i7.UserEntity> getUserLocal(String? userPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserLocal,
          [userPhoneNumber],
        ),
        returnValue: _i22.Future<_i7.UserEntity>.value(_FakeUserEntity_5(
          this,
          Invocation.method(
            #getUserLocal,
            [userPhoneNumber],
          ),
        )),
      ) as _i22.Future<_i7.UserEntity>);
  @override
  _i22.Future<bool> removeUserLocal(String? userPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeUserLocal,
          [userPhoneNumber],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> saveUserLocal(_i7.UserEntity? userItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserLocal,
          [userItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> existMessageLocal(String? messageId) => (super.noSuchMethod(
        Invocation.method(
          #existMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i8.MessageEntity>> getAllMessagesLocal(
    String? senderPhoneNumber,
    String? targetPhoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllMessagesLocal,
          [
            senderPhoneNumber,
            targetPhoneNumber,
          ],
        ),
        returnValue:
            _i22.Future<List<_i8.MessageEntity>>.value(<_i8.MessageEntity>[]),
      ) as _i22.Future<List<_i8.MessageEntity>>);
  @override
  _i22.Future<_i8.MessageEntity> getMessageLocal(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<_i8.MessageEntity>.value(_FakeMessageEntity_6(
          this,
          Invocation.method(
            #getMessageLocal,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i8.MessageEntity>);
  @override
  _i22.Future<bool> removeMessageLocal(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> saveMessageLocal(_i8.MessageEntity? messageItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMessageLocal,
          [messageItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i8.MessageEntity>> getAllUnsendMessagesLocal() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllUnsendMessagesLocal,
          [],
        ),
        returnValue:
            _i22.Future<List<_i8.MessageEntity>>.value(<_i8.MessageEntity>[]),
      ) as _i22.Future<List<_i8.MessageEntity>>);
  @override
  _i22.Future<List<_i8.MessageEntity>> getAllNotReadMessagesLocal(
    String? senderPhoneNumber,
    String? targetPhoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllNotReadMessagesLocal,
          [
            senderPhoneNumber,
            targetPhoneNumber,
          ],
        ),
        returnValue:
            _i22.Future<List<_i8.MessageEntity>>.value(<_i8.MessageEntity>[]),
      ) as _i22.Future<List<_i8.MessageEntity>>);
  @override
  _i22.Future<List<_i9.GroupEntity>> getAllGroupsLocal() => (super.noSuchMethod(
        Invocation.method(
          #getAllGroupsLocal,
          [],
        ),
        returnValue:
            _i22.Future<List<_i9.GroupEntity>>.value(<_i9.GroupEntity>[]),
      ) as _i22.Future<List<_i9.GroupEntity>>);
  @override
  _i22.Future<_i9.GroupEntity> getGroupLocal(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupLocal,
          [groupId],
        ),
        returnValue: _i22.Future<_i9.GroupEntity>.value(_FakeGroupEntity_7(
          this,
          Invocation.method(
            #getGroupLocal,
            [groupId],
          ),
        )),
      ) as _i22.Future<_i9.GroupEntity>);
  @override
  _i22.Future<bool> removeGroupLocal(String? groupId) => (super.noSuchMethod(
        Invocation.method(
          #removeGroupLocal,
          [groupId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> saveGroupLocal(_i9.GroupEntity? groupItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupLocal,
          [groupItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i10.GroupUserEntity>> getAllGroupUsersLocal(
          String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllGroupUsersLocal,
          [groupId],
        ),
        returnValue: _i22.Future<List<_i10.GroupUserEntity>>.value(
            <_i10.GroupUserEntity>[]),
      ) as _i22.Future<List<_i10.GroupUserEntity>>);
  @override
  _i22.Future<_i10.GroupUserEntity> getGroupUserLocal(
    String? groupId,
    String? userPhoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupUserLocal,
          [
            groupId,
            userPhoneNumber,
          ],
        ),
        returnValue:
            _i22.Future<_i10.GroupUserEntity>.value(_FakeGroupUserEntity_8(
          this,
          Invocation.method(
            #getGroupUserLocal,
            [
              groupId,
              userPhoneNumber,
            ],
          ),
        )),
      ) as _i22.Future<_i10.GroupUserEntity>);
  @override
  _i22.Future<bool> removeGroupUserLocal(
    String? groupId,
    String? userPhoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupUserLocal,
          [
            groupId,
            userPhoneNumber,
          ],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> saveGroupUserLocal(_i10.GroupUserEntity? groupUserItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupUserLocal,
          [groupUserItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> existGroupMessageLocal(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #existGroupMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i11.GroupMessageEntity>> getAllGroupMessagesLocal(
          String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllGroupMessagesLocal,
          [groupId],
        ),
        returnValue: _i22.Future<List<_i11.GroupMessageEntity>>.value(
            <_i11.GroupMessageEntity>[]),
      ) as _i22.Future<List<_i11.GroupMessageEntity>>);
  @override
  _i22.Future<_i11.GroupMessageEntity> getGroupMessageLocal(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<_i11.GroupMessageEntity>.value(
            _FakeGroupMessageEntity_9(
          this,
          Invocation.method(
            #getGroupMessageLocal,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i11.GroupMessageEntity>);
  @override
  _i22.Future<bool> removeGroupMessageLocal(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> saveGroupMessageLocal(
          _i11.GroupMessageEntity? groupMessageItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupMessageLocal,
          [groupMessageItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i11.GroupMessageEntity>> getAllUnsendGroupMessagesLocal(
          String? senderPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllUnsendGroupMessagesLocal,
          [senderPhoneNumber],
        ),
        returnValue: _i22.Future<List<_i11.GroupMessageEntity>>.value(
            <_i11.GroupMessageEntity>[]),
      ) as _i22.Future<List<_i11.GroupMessageEntity>>);
  @override
  _i22.Future<bool> existGroupMessageTypeLocal(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #existGroupMessageTypeLocal,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i12.GroupMessageTypeEntity>> getAllGroupMessageTypesLocal(
    String? groupId,
    String? messageId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllGroupMessageTypesLocal,
          [
            groupId,
            messageId,
          ],
        ),
        returnValue: _i22.Future<List<_i12.GroupMessageTypeEntity>>.value(
            <_i12.GroupMessageTypeEntity>[]),
      ) as _i22.Future<List<_i12.GroupMessageTypeEntity>>);
  @override
  _i22.Future<_i12.GroupMessageTypeEntity> getGroupMessageTypeLocal(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupMessageTypeLocal,
          [messageId],
        ),
        returnValue: _i22.Future<_i12.GroupMessageTypeEntity>.value(
            _FakeGroupMessageTypeEntity_10(
          this,
          Invocation.method(
            #getGroupMessageTypeLocal,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i12.GroupMessageTypeEntity>);
  @override
  _i22.Future<bool> removeGroupMessageTypeLocal(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupMessageTypeLocal,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> saveGroupMessageTypeLocal(
          _i12.GroupMessageTypeEntity? groupMessageTypeItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupMessageTypeLocal,
          [groupMessageTypeItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i12.GroupMessageTypeEntity>>
      getAllUnsendGroupMessageTypesLocal(String? groupId) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAllUnsendGroupMessageTypesLocal,
              [groupId],
            ),
            returnValue: _i22.Future<List<_i12.GroupMessageTypeEntity>>.value(
                <_i12.GroupMessageTypeEntity>[]),
          ) as _i22.Future<List<_i12.GroupMessageTypeEntity>>);
  @override
  _i22.Future<List<_i12.GroupMessageTypeEntity>>
      getAllNotReadGroupMessageTypesLocal(String? receiverPhoneNumber) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAllNotReadGroupMessageTypesLocal,
              [receiverPhoneNumber],
            ),
            returnValue: _i22.Future<List<_i12.GroupMessageTypeEntity>>.value(
                <_i12.GroupMessageTypeEntity>[]),
          ) as _i22.Future<List<_i12.GroupMessageTypeEntity>>);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i26.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
      ) as Set<String>);
  @override
  Object? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as Object?);
  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);
  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);
  @override
  double? getDouble(String? key) => (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);
  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);
  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);
  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);
  @override
  _i22.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i22.Future<void>.value(),
        returnValueForMissingStub: _i22.Future<void>.value(),
      ) as _i22.Future<void>);
}

/// A class which mocks [UserLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLocalDataSource extends _i1.Mock
    implements _i27.UserLocalDataSource {
  MockUserLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<bool> existUserLocal(String? userPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #existUserLocal,
          [userPhoneNumber],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i7.UserEntity>> getAllUsersLocal() => (super.noSuchMethod(
        Invocation.method(
          #getAllUsersLocal,
          [],
        ),
        returnValue:
            _i22.Future<List<_i7.UserEntity>>.value(<_i7.UserEntity>[]),
      ) as _i22.Future<List<_i7.UserEntity>>);
  @override
  _i22.Future<_i7.UserEntity> getUserLocal(String? userPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserLocal,
          [userPhoneNumber],
        ),
        returnValue: _i22.Future<_i7.UserEntity>.value(_FakeUserEntity_5(
          this,
          Invocation.method(
            #getUserLocal,
            [userPhoneNumber],
          ),
        )),
      ) as _i22.Future<_i7.UserEntity>);
  @override
  _i22.Future<bool> removeUserLocal(String? userPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeUserLocal,
          [userPhoneNumber],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> saveUserLocal(_i7.UserEntity? userItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserLocal,
          [userItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
}

/// A class which mocks [UserRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRemoteDataSource extends _i1.Mock
    implements _i28.UserRemoteDataSource {
  MockUserRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<List<_i13.UserModel>> getAllUsersRemote() => (super.noSuchMethod(
        Invocation.method(
          #getAllUsersRemote,
          [],
        ),
        returnValue:
            _i22.Future<List<_i13.UserModel>>.value(<_i13.UserModel>[]),
      ) as _i22.Future<List<_i13.UserModel>>);
  @override
  _i22.Future<_i13.UserModel> getUserRemote(String? userPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserRemote,
          [userPhoneNumber],
        ),
        returnValue: _i22.Future<_i13.UserModel>.value(_FakeUserModel_11(
          this,
          Invocation.method(
            #getUserRemote,
            [userPhoneNumber],
          ),
        )),
      ) as _i22.Future<_i13.UserModel>);
  @override
  _i22.Future<bool> saveUserRemote(_i13.UserModel? userItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserRemote,
          [userItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> setUserLastSeenDateTimeRemote(
    String? userPhoneNumber,
    String? lastSeenDateTime,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserLastSeenDateTimeRemote,
          [
            userPhoneNumber,
            lastSeenDateTime,
          ],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> sendSMSVerifyCodeRemote(_i29.SMSModel? smsItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSMSVerifyCodeRemote,
          [smsItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
}

/// A class which mocks [MessageLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMessageLocalDataSource extends _i1.Mock
    implements _i30.MessageLocalDataSource {
  MockMessageLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<bool> existMessageLocal(String? messageId) => (super.noSuchMethod(
        Invocation.method(
          #existMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i8.MessageEntity>> getAllMessagesLocal(
    String? senderPhoneNumber,
    String? targetPhoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllMessagesLocal,
          [
            senderPhoneNumber,
            targetPhoneNumber,
          ],
        ),
        returnValue:
            _i22.Future<List<_i8.MessageEntity>>.value(<_i8.MessageEntity>[]),
      ) as _i22.Future<List<_i8.MessageEntity>>);
  @override
  _i22.Future<_i8.MessageEntity> getMessageLocal(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<_i8.MessageEntity>.value(_FakeMessageEntity_6(
          this,
          Invocation.method(
            #getMessageLocal,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i8.MessageEntity>);
  @override
  _i22.Future<bool> removeMessageLocal(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> saveMessageLocal(_i8.MessageEntity? messageItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMessageLocal,
          [messageItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i8.MessageEntity>> getAllUnsendMessagesLocal() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllUnsendMessagesLocal,
          [],
        ),
        returnValue:
            _i22.Future<List<_i8.MessageEntity>>.value(<_i8.MessageEntity>[]),
      ) as _i22.Future<List<_i8.MessageEntity>>);
  @override
  _i22.Future<List<_i8.MessageEntity>> getAllNotReadMessagesLocal(
    String? senderPhoneNumber,
    String? targetPhoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllNotReadMessagesLocal,
          [
            senderPhoneNumber,
            targetPhoneNumber,
          ],
        ),
        returnValue:
            _i22.Future<List<_i8.MessageEntity>>.value(<_i8.MessageEntity>[]),
      ) as _i22.Future<List<_i8.MessageEntity>>);
}

/// A class which mocks [MessageRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMessageRemoteDataSource extends _i1.Mock
    implements _i31.MessageRemoteDataSource {
  MockMessageRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<List<_i8.MessageEntity>> getAllMessagesRemote(
    String? senderPhoneNumber,
    String? targetPhoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllMessagesRemote,
          [
            senderPhoneNumber,
            targetPhoneNumber,
          ],
        ),
        returnValue:
            _i22.Future<List<_i8.MessageEntity>>.value(<_i8.MessageEntity>[]),
      ) as _i22.Future<List<_i8.MessageEntity>>);
  @override
  _i22.Future<bool> removeMessageRemote(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMessageRemote,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<_i8.MessageEntity> getMessageRemote(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessageRemote,
          [messageId],
        ),
        returnValue: _i22.Future<_i8.MessageEntity>.value(_FakeMessageEntity_6(
          this,
          Invocation.method(
            #getMessageRemote,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i8.MessageEntity>);
  @override
  _i22.Future<List<_i8.MessageEntity>> getMissedMessagesRemote(
          String? targetPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMissedMessagesRemote,
          [targetPhoneNumber],
        ),
        returnValue:
            _i22.Future<List<_i8.MessageEntity>>.value(<_i8.MessageEntity>[]),
      ) as _i22.Future<List<_i8.MessageEntity>>);
  @override
  _i22.Future<bool> saveMessageRemote(_i8.MessageEntity? messageItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMessageRemote,
          [messageItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> updateAllMessagesRemote(
          List<_i8.MessageEntity>? messageItems) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAllMessagesRemote,
          [messageItems],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
}

/// A class which mocks [GroupLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupLocalDataSource extends _i1.Mock
    implements _i32.GroupLocalDataSource {
  MockGroupLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<List<_i9.GroupEntity>> getAllGroupsLocal() => (super.noSuchMethod(
        Invocation.method(
          #getAllGroupsLocal,
          [],
        ),
        returnValue:
            _i22.Future<List<_i9.GroupEntity>>.value(<_i9.GroupEntity>[]),
      ) as _i22.Future<List<_i9.GroupEntity>>);
  @override
  _i22.Future<_i9.GroupEntity> getGroupLocal(String? userPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupLocal,
          [userPhoneNumber],
        ),
        returnValue: _i22.Future<_i9.GroupEntity>.value(_FakeGroupEntity_7(
          this,
          Invocation.method(
            #getGroupLocal,
            [userPhoneNumber],
          ),
        )),
      ) as _i22.Future<_i9.GroupEntity>);
  @override
  _i22.Future<bool> removeGroupLocal(String? groupId) => (super.noSuchMethod(
        Invocation.method(
          #removeGroupLocal,
          [groupId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> saveGroupLocal(_i9.GroupEntity? groupItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupLocal,
          [groupItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
}

/// A class which mocks [GroupRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupRemoteDataSource extends _i1.Mock
    implements _i33.GroupRemoteDataSource {
  MockGroupRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<List<_i9.GroupEntity>> getAllGroupsRemote() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllGroupsRemote,
          [],
        ),
        returnValue:
            _i22.Future<List<_i9.GroupEntity>>.value(<_i9.GroupEntity>[]),
      ) as _i22.Future<List<_i9.GroupEntity>>);
  @override
  _i22.Future<_i9.GroupEntity> getGroupRemote(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupRemote,
          [groupId],
        ),
        returnValue: _i22.Future<_i9.GroupEntity>.value(_FakeGroupEntity_7(
          this,
          Invocation.method(
            #getGroupRemote,
            [groupId],
          ),
        )),
      ) as _i22.Future<_i9.GroupEntity>);
  @override
  _i22.Future<bool> saveGroupRemote(_i9.GroupEntity? groupItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupRemote,
          [groupItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
}

/// A class which mocks [GroupUserLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupUserLocalDataSource extends _i1.Mock
    implements _i34.GroupUserLocalDataSource {
  MockGroupUserLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<List<_i10.GroupUserEntity>> getAllGroupUsersLocal(
          String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllGroupUsersLocal,
          [groupId],
        ),
        returnValue: _i22.Future<List<_i10.GroupUserEntity>>.value(
            <_i10.GroupUserEntity>[]),
      ) as _i22.Future<List<_i10.GroupUserEntity>>);
  @override
  _i22.Future<_i10.GroupUserEntity> getGroupUserLocal(
    String? groupId,
    String? userPhoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupUserLocal,
          [
            groupId,
            userPhoneNumber,
          ],
        ),
        returnValue:
            _i22.Future<_i10.GroupUserEntity>.value(_FakeGroupUserEntity_8(
          this,
          Invocation.method(
            #getGroupUserLocal,
            [
              groupId,
              userPhoneNumber,
            ],
          ),
        )),
      ) as _i22.Future<_i10.GroupUserEntity>);
  @override
  _i22.Future<bool> removeGroupUserLocal(
    String? groupId,
    String? userPhoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupUserLocal,
          [
            groupId,
            userPhoneNumber,
          ],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> saveGroupUserLocal(_i10.GroupUserEntity? groupItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupUserLocal,
          [groupItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
}

/// A class which mocks [GroupUserRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupUserRemoteDataSource extends _i1.Mock
    implements _i35.GroupUserRemoteDataSource {
  MockGroupUserRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<List<_i10.GroupUserEntity>> getAllGroupUsersRemote(
          String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllGroupUsersRemote,
          [groupId],
        ),
        returnValue: _i22.Future<List<_i10.GroupUserEntity>>.value(
            <_i10.GroupUserEntity>[]),
      ) as _i22.Future<List<_i10.GroupUserEntity>>);
  @override
  _i22.Future<List<_i10.GroupUserEntity>> getAllGroupUsersByPhoneNumberRemote(
          String? userPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllGroupUsersByPhoneNumberRemote,
          [userPhoneNumber],
        ),
        returnValue: _i22.Future<List<_i10.GroupUserEntity>>.value(
            <_i10.GroupUserEntity>[]),
      ) as _i22.Future<List<_i10.GroupUserEntity>>);
  @override
  _i22.Future<bool> saveGroupUserRemote(_i10.GroupUserEntity? groupUserItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupUserRemote,
          [groupUserItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> removeGroupUserRemote(
    String? groupId,
    String? userPhoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupUserRemote,
          [
            groupId,
            userPhoneNumber,
          ],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
}

/// A class which mocks [GroupMessageLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupMessageLocalDataSource extends _i1.Mock
    implements _i36.GroupMessageLocalDataSource {
  MockGroupMessageLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<bool> existGroupMessageLocal(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #existGroupMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i11.GroupMessageEntity>> getAllGroupMessagesLocal(
          String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllGroupMessagesLocal,
          [groupId],
        ),
        returnValue: _i22.Future<List<_i11.GroupMessageEntity>>.value(
            <_i11.GroupMessageEntity>[]),
      ) as _i22.Future<List<_i11.GroupMessageEntity>>);
  @override
  _i22.Future<_i11.GroupMessageEntity> getGroupMessageLocal(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<_i11.GroupMessageEntity>.value(
            _FakeGroupMessageEntity_9(
          this,
          Invocation.method(
            #getGroupMessageLocal,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i11.GroupMessageEntity>);
  @override
  _i22.Future<bool> removeGroupMessageLocal(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> saveGroupMessageLocal(
          _i11.GroupMessageEntity? groupMessageItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupMessageLocal,
          [groupMessageItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i11.GroupMessageEntity>> getAllUnsendGroupMessagesLocal(
          String? senderPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllUnsendGroupMessagesLocal,
          [senderPhoneNumber],
        ),
        returnValue: _i22.Future<List<_i11.GroupMessageEntity>>.value(
            <_i11.GroupMessageEntity>[]),
      ) as _i22.Future<List<_i11.GroupMessageEntity>>);
}

/// A class which mocks [GroupMessageRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupMessageRemoteDataSource extends _i1.Mock
    implements _i37.GroupMessageRemoteDataSource {
  MockGroupMessageRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<List<_i11.GroupMessageEntity>> getAllGroupMessagesRemote(
          String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllGroupMessagesRemote,
          [groupId],
        ),
        returnValue: _i22.Future<List<_i11.GroupMessageEntity>>.value(
            <_i11.GroupMessageEntity>[]),
      ) as _i22.Future<List<_i11.GroupMessageEntity>>);
  @override
  _i22.Future<bool> removeGroupMessageRemote(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupMessageRemote,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<_i11.GroupMessageEntity> getGroupMessageRemote(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupMessageRemote,
          [messageId],
        ),
        returnValue: _i22.Future<_i11.GroupMessageEntity>.value(
            _FakeGroupMessageEntity_9(
          this,
          Invocation.method(
            #getGroupMessageRemote,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i11.GroupMessageEntity>);
  @override
  _i22.Future<List<_i11.GroupMessageEntity>> getMissedGroupMessagesRemote(
    String? groupId,
    String? receiverPhoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMissedGroupMessagesRemote,
          [
            groupId,
            receiverPhoneNumber,
          ],
        ),
        returnValue: _i22.Future<List<_i11.GroupMessageEntity>>.value(
            <_i11.GroupMessageEntity>[]),
      ) as _i22.Future<List<_i11.GroupMessageEntity>>);
  @override
  _i22.Future<bool> saveGroupMessageRemote(
          _i11.GroupMessageEntity? groupMessageItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupMessageRemote,
          [groupMessageItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> updateAllGroupMessagesRemote(
          List<_i11.GroupMessageEntity>? groupMessageItems) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAllGroupMessagesRemote,
          [groupMessageItems],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
}

/// A class which mocks [GroupMessageTypeLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupMessageTypeLocalDataSource extends _i1.Mock
    implements _i38.GroupMessageTypeLocalDataSource {
  MockGroupMessageTypeLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<bool> existGroupMessageTypeLocal(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #existGroupMessageTypeLocal,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i12.GroupMessageTypeEntity>> getAllGroupMessageTypesLocal(
    String? groupId,
    String? messageId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllGroupMessageTypesLocal,
          [
            groupId,
            messageId,
          ],
        ),
        returnValue: _i22.Future<List<_i12.GroupMessageTypeEntity>>.value(
            <_i12.GroupMessageTypeEntity>[]),
      ) as _i22.Future<List<_i12.GroupMessageTypeEntity>>);
  @override
  _i22.Future<_i12.GroupMessageTypeEntity> getGroupMessageTypeLocal(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupMessageTypeLocal,
          [messageId],
        ),
        returnValue: _i22.Future<_i12.GroupMessageTypeEntity>.value(
            _FakeGroupMessageTypeEntity_10(
          this,
          Invocation.method(
            #getGroupMessageTypeLocal,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i12.GroupMessageTypeEntity>);
  @override
  _i22.Future<bool> removeGroupMessageTypeLocal(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupMessageTypeLocal,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> saveGroupMessageTypeLocal(
          _i12.GroupMessageTypeEntity? groupMessageTypeItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupMessageTypeLocal,
          [groupMessageTypeItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<List<_i12.GroupMessageTypeEntity>>
      getAllUnsendGroupMessageTypesLocal(String? receiverPhoneNumber) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAllUnsendGroupMessageTypesLocal,
              [receiverPhoneNumber],
            ),
            returnValue: _i22.Future<List<_i12.GroupMessageTypeEntity>>.value(
                <_i12.GroupMessageTypeEntity>[]),
          ) as _i22.Future<List<_i12.GroupMessageTypeEntity>>);
  @override
  _i22.Future<List<_i12.GroupMessageTypeEntity>>
      getAllNotReadGroupMessageTypesLocal(String? groupId) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAllNotReadGroupMessageTypesLocal,
              [groupId],
            ),
            returnValue: _i22.Future<List<_i12.GroupMessageTypeEntity>>.value(
                <_i12.GroupMessageTypeEntity>[]),
          ) as _i22.Future<List<_i12.GroupMessageTypeEntity>>);
}

/// A class which mocks [GroupMessageTypeRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupMessageTypeRemoteDataSource extends _i1.Mock
    implements _i39.GroupMessageTypeRemoteDataSource {
  MockGroupMessageTypeRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<List<_i12.GroupMessageTypeEntity>> getAllGroupMessageTypesRemote(
    String? groupId,
    String? messageId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllGroupMessageTypesRemote,
          [
            groupId,
            messageId,
          ],
        ),
        returnValue: _i22.Future<List<_i12.GroupMessageTypeEntity>>.value(
            <_i12.GroupMessageTypeEntity>[]),
      ) as _i22.Future<List<_i12.GroupMessageTypeEntity>>);
  @override
  _i22.Future<bool> removeGroupMessageTypeRemote(String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupMessageTypeRemote,
          [messageId],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<_i12.GroupMessageTypeEntity> getGroupMessageTypeRemote(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupMessageTypeRemote,
          [messageId],
        ),
        returnValue: _i22.Future<_i12.GroupMessageTypeEntity>.value(
            _FakeGroupMessageTypeEntity_10(
          this,
          Invocation.method(
            #getGroupMessageTypeRemote,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i12.GroupMessageTypeEntity>);
  @override
  _i22.Future<bool> saveGroupMessageTypeRemote(
          _i12.GroupMessageTypeEntity? groupMessageTypeItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupMessageTypeRemote,
          [groupMessageTypeItem],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
  @override
  _i22.Future<bool> updateAllGroupMessageTypesRemote(
          List<_i12.GroupMessageTypeEntity>? groupMessageTypeItems) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAllGroupMessageTypesRemote,
          [groupMessageTypeItems],
        ),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i40.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i22.Future<bool>.value(false),
      ) as _i22.Future<bool>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i15.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> existUserLocal(
          String? userPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #existUserLocal,
          [userPhoneNumber],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #existUserLocal,
            [userPhoneNumber],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i7.UserEntity>>>
      getAllUsersLocal() => (super.noSuchMethod(
            Invocation.method(
              #getAllUsersLocal,
              [],
            ),
            returnValue: _i22
                .Future<_i14.Either<_i41.Failure, List<_i7.UserEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i7.UserEntity>>(
              this,
              Invocation.method(
                #getAllUsersLocal,
                [],
              ),
            )),
          ) as _i22.Future<_i14.Either<_i41.Failure, List<_i7.UserEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i7.UserEntity>> getUserLocal(
          String? userPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserLocal,
          [userPhoneNumber],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, _i7.UserEntity>>.value(
                _FakeEither_12<_i41.Failure, _i7.UserEntity>(
          this,
          Invocation.method(
            #getUserLocal,
            [userPhoneNumber],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i7.UserEntity>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> removeUserLocal(
          String? userPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeUserLocal,
          [userPhoneNumber],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #removeUserLocal,
            [userPhoneNumber],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> saveUserLocal(
          _i7.UserEntity? userItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserLocal,
          [userItem],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #saveUserLocal,
            [userItem],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i7.UserEntity>>>
      getAllUsersRemote() => (super.noSuchMethod(
            Invocation.method(
              #getAllUsersRemote,
              [],
            ),
            returnValue: _i22
                .Future<_i14.Either<_i41.Failure, List<_i7.UserEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i7.UserEntity>>(
              this,
              Invocation.method(
                #getAllUsersRemote,
                [],
              ),
            )),
          ) as _i22.Future<_i14.Either<_i41.Failure, List<_i7.UserEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i7.UserEntity>> getUserRemote(
          String? userPhoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserRemote,
          [userPhoneNumber],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, _i7.UserEntity>>.value(
                _FakeEither_12<_i41.Failure, _i7.UserEntity>(
          this,
          Invocation.method(
            #getUserRemote,
            [userPhoneNumber],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i7.UserEntity>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> saveUserRemote(
          _i7.UserEntity? userItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserRemote,
          [userItem],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #saveUserRemote,
            [userItem],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> setUserLastSeenDateTimeRemote(
    String? userPhoneNumber,
    String? lastSeenDateTime,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserLastSeenDateTimeRemote,
          [
            userPhoneNumber,
            lastSeenDateTime,
          ],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #setUserLastSeenDateTimeRemote,
            [
              userPhoneNumber,
              lastSeenDateTime,
            ],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> sendSMSVerifyCodeRemote(
          _i29.SMSModel? smsItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSMSVerifyCodeRemote,
          [smsItem],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #sendSMSVerifyCodeRemote,
            [smsItem],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [MessageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMessageRepository extends _i1.Mock implements _i16.MessageRepository {
  MockMessageRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> existMessageLocal(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #existMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #existMessageLocal,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>
      getAllMessagesLocal(
    String? senderPhoneNumber,
    String? targetPhoneNumber,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAllMessagesLocal,
              [
                senderPhoneNumber,
                targetPhoneNumber,
              ],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure, List<_i8.MessageEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i8.MessageEntity>>(
              this,
              Invocation.method(
                #getAllMessagesLocal,
                [
                  senderPhoneNumber,
                  targetPhoneNumber,
                ],
              ),
            )),
          ) as _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i8.MessageEntity>> getMessageLocal(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessageLocal,
          [messageId],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, _i8.MessageEntity>>.value(
                _FakeEither_12<_i41.Failure, _i8.MessageEntity>(
          this,
          Invocation.method(
            #getMessageLocal,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i8.MessageEntity>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> removeMessageLocal(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #removeMessageLocal,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> saveMessageLocal(
          _i8.MessageEntity? messageItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMessageLocal,
          [messageItem],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #saveMessageLocal,
            [messageItem],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>
      getAllUnsendMessagesLocal() => (super.noSuchMethod(
            Invocation.method(
              #getAllUnsendMessagesLocal,
              [],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure, List<_i8.MessageEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i8.MessageEntity>>(
              this,
              Invocation.method(
                #getAllUnsendMessagesLocal,
                [],
              ),
            )),
          ) as _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>
      getAllNotReadMessagesLocal(
    String? senderPhoneNumber,
    String? targetPhoneNumber,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAllNotReadMessagesLocal,
              [
                senderPhoneNumber,
                targetPhoneNumber,
              ],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure, List<_i8.MessageEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i8.MessageEntity>>(
              this,
              Invocation.method(
                #getAllNotReadMessagesLocal,
                [
                  senderPhoneNumber,
                  targetPhoneNumber,
                ],
              ),
            )),
          ) as _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>
      getAllMessagesRemote(
    String? senderPhoneNumber,
    String? targetPhoneNumber,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAllMessagesRemote,
              [
                senderPhoneNumber,
                targetPhoneNumber,
              ],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure, List<_i8.MessageEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i8.MessageEntity>>(
              this,
              Invocation.method(
                #getAllMessagesRemote,
                [
                  senderPhoneNumber,
                  targetPhoneNumber,
                ],
              ),
            )),
          ) as _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> removeMessageRemote(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMessageRemote,
          [messageId],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #removeMessageRemote,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i8.MessageEntity>> getMessageRemote(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessageRemote,
          [messageId],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, _i8.MessageEntity>>.value(
                _FakeEither_12<_i41.Failure, _i8.MessageEntity>(
          this,
          Invocation.method(
            #getMessageRemote,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i8.MessageEntity>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>
      getMissedMessagesRemote(String? targetPhoneNumber) => (super.noSuchMethod(
            Invocation.method(
              #getMissedMessagesRemote,
              [targetPhoneNumber],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure, List<_i8.MessageEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i8.MessageEntity>>(
              this,
              Invocation.method(
                #getMissedMessagesRemote,
                [targetPhoneNumber],
              ),
            )),
          ) as _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> saveMessageRemote(
          _i8.MessageEntity? messageItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMessageRemote,
          [messageItem],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #saveMessageRemote,
            [messageItem],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> updateAllMessagesRemote(
          List<_i8.MessageEntity>? messageItems) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAllMessagesRemote,
          [messageItems],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #updateAllMessagesRemote,
            [messageItems],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [GroupRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupRepository extends _i1.Mock implements _i17.GroupRepository {
  MockGroupRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i9.GroupEntity>>>
      getAllGroupsLocal() => (super.noSuchMethod(
            Invocation.method(
              #getAllGroupsLocal,
              [],
            ),
            returnValue: _i22
                .Future<_i14.Either<_i41.Failure, List<_i9.GroupEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i9.GroupEntity>>(
              this,
              Invocation.method(
                #getAllGroupsLocal,
                [],
              ),
            )),
          ) as _i22.Future<_i14.Either<_i41.Failure, List<_i9.GroupEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i9.GroupEntity>> getGroupLocal(
          String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupLocal,
          [groupId],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, _i9.GroupEntity>>.value(
                _FakeEither_12<_i41.Failure, _i9.GroupEntity>(
          this,
          Invocation.method(
            #getGroupLocal,
            [groupId],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i9.GroupEntity>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> removeGroupLocal(
          String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupLocal,
          [groupId],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #removeGroupLocal,
            [groupId],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> saveGroupLocal(
          _i9.GroupEntity? groupItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupLocal,
          [groupItem],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #saveGroupLocal,
            [groupItem],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i9.GroupEntity>>>
      getAllGroupsRemote() => (super.noSuchMethod(
            Invocation.method(
              #getAllGroupsRemote,
              [],
            ),
            returnValue: _i22
                .Future<_i14.Either<_i41.Failure, List<_i9.GroupEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i9.GroupEntity>>(
              this,
              Invocation.method(
                #getAllGroupsRemote,
                [],
              ),
            )),
          ) as _i22.Future<_i14.Either<_i41.Failure, List<_i9.GroupEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i9.GroupEntity>> getGroupRemote(
          String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupRemote,
          [groupId],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, _i9.GroupEntity>>.value(
                _FakeEither_12<_i41.Failure, _i9.GroupEntity>(
          this,
          Invocation.method(
            #getGroupRemote,
            [groupId],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i9.GroupEntity>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> saveGroupRemote(
          _i9.GroupEntity? groupItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupRemote,
          [groupItem],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #saveGroupRemote,
            [groupItem],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [GroupUserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupUserRepository extends _i1.Mock
    implements _i18.GroupUserRepository {
  MockGroupUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>>
      getAllGroupUsersLocal(String? groupId) => (super.noSuchMethod(
            Invocation.method(
              #getAllGroupUsersLocal,
              [groupId],
            ),
            returnValue: _i22.Future<
                    _i14
                    .Either<_i41.Failure, List<_i10.GroupUserEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i10.GroupUserEntity>>(
              this,
              Invocation.method(
                #getAllGroupUsersLocal,
                [groupId],
              ),
            )),
          ) as _i22
              .Future<_i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i10.GroupUserEntity>>
      getGroupUserLocal(
    String? groupId,
    String? userPhoneNumber,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getGroupUserLocal,
              [
                groupId,
                userPhoneNumber,
              ],
            ),
            returnValue: _i22
                .Future<_i14.Either<_i41.Failure, _i10.GroupUserEntity>>.value(
                _FakeEither_12<_i41.Failure, _i10.GroupUserEntity>(
              this,
              Invocation.method(
                #getGroupUserLocal,
                [
                  groupId,
                  userPhoneNumber,
                ],
              ),
            )),
          ) as _i22.Future<_i14.Either<_i41.Failure, _i10.GroupUserEntity>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> removeGroupUserLocal(
    String? groupId,
    String? userPhoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupUserLocal,
          [
            groupId,
            userPhoneNumber,
          ],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #removeGroupUserLocal,
            [
              groupId,
              userPhoneNumber,
            ],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> saveGroupUserLocal(
          _i10.GroupUserEntity? groupItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupUserLocal,
          [groupItem],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #saveGroupUserLocal,
            [groupItem],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>>
      getAllGroupUsersRemote(String? groupId) => (super.noSuchMethod(
            Invocation.method(
              #getAllGroupUsersRemote,
              [groupId],
            ),
            returnValue: _i22.Future<
                    _i14
                    .Either<_i41.Failure, List<_i10.GroupUserEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i10.GroupUserEntity>>(
              this,
              Invocation.method(
                #getAllGroupUsersRemote,
                [groupId],
              ),
            )),
          ) as _i22
              .Future<_i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>>
      getAllGroupUsersByPhoneNumberRemote(String? userPhoneNumber) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAllGroupUsersByPhoneNumberRemote,
              [userPhoneNumber],
            ),
            returnValue: _i22.Future<
                    _i14
                    .Either<_i41.Failure, List<_i10.GroupUserEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i10.GroupUserEntity>>(
              this,
              Invocation.method(
                #getAllGroupUsersByPhoneNumberRemote,
                [userPhoneNumber],
              ),
            )),
          ) as _i22
              .Future<_i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> saveGroupUserRemote(
          _i10.GroupUserEntity? groupUserItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupUserRemote,
          [groupUserItem],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #saveGroupUserRemote,
            [groupUserItem],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> removeGroupUserRemote(
    String? groupId,
    String? userPhoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupUserRemote,
          [
            groupId,
            userPhoneNumber,
          ],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #removeGroupUserRemote,
            [
              groupId,
              userPhoneNumber,
            ],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [GroupMessageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupMessageRepository extends _i1.Mock
    implements _i19.GroupMessageRepository {
  MockGroupMessageRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> existGroupMessageLocal(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #existGroupMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #existGroupMessageLocal,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>
      getAllGroupMessagesLocal(String? groupId) => (super.noSuchMethod(
            Invocation.method(
              #getAllGroupMessagesLocal,
              [groupId],
            ),
            returnValue: _i22.Future<
                    _i14
                    .Either<_i41.Failure, List<_i11.GroupMessageEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i11.GroupMessageEntity>>(
              this,
              Invocation.method(
                #getAllGroupMessagesLocal,
                [groupId],
              ),
            )),
          ) as _i22.Future<
              _i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i11.GroupMessageEntity>>
      getGroupMessageLocal(String? messageId) => (super.noSuchMethod(
            Invocation.method(
              #getGroupMessageLocal,
              [messageId],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure, _i11.GroupMessageEntity>>.value(
                _FakeEither_12<_i41.Failure, _i11.GroupMessageEntity>(
              this,
              Invocation.method(
                #getGroupMessageLocal,
                [messageId],
              ),
            )),
          ) as _i22.Future<_i14.Either<_i41.Failure, _i11.GroupMessageEntity>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> removeGroupMessageLocal(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupMessageLocal,
          [messageId],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #removeGroupMessageLocal,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> saveGroupMessageLocal(
          _i11.GroupMessageEntity? groupMessageItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupMessageLocal,
          [groupMessageItem],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #saveGroupMessageLocal,
            [groupMessageItem],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>
      getAllUnsendGroupMessagesLocal(String? senderPhoneNumber) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAllUnsendGroupMessagesLocal,
              [senderPhoneNumber],
            ),
            returnValue: _i22.Future<
                    _i14
                    .Either<_i41.Failure, List<_i11.GroupMessageEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i11.GroupMessageEntity>>(
              this,
              Invocation.method(
                #getAllUnsendGroupMessagesLocal,
                [senderPhoneNumber],
              ),
            )),
          ) as _i22.Future<
              _i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>
      getAllGroupMessagesRemote(String? groupId) => (super.noSuchMethod(
            Invocation.method(
              #getAllGroupMessagesRemote,
              [groupId],
            ),
            returnValue: _i22.Future<
                    _i14
                    .Either<_i41.Failure, List<_i11.GroupMessageEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i11.GroupMessageEntity>>(
              this,
              Invocation.method(
                #getAllGroupMessagesRemote,
                [groupId],
              ),
            )),
          ) as _i22.Future<
              _i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> removeGroupMessageRemote(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupMessageRemote,
          [messageId],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #removeGroupMessageRemote,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i11.GroupMessageEntity>>
      getGroupMessageRemote(String? messageId) => (super.noSuchMethod(
            Invocation.method(
              #getGroupMessageRemote,
              [messageId],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure, _i11.GroupMessageEntity>>.value(
                _FakeEither_12<_i41.Failure, _i11.GroupMessageEntity>(
              this,
              Invocation.method(
                #getGroupMessageRemote,
                [messageId],
              ),
            )),
          ) as _i22.Future<_i14.Either<_i41.Failure, _i11.GroupMessageEntity>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>
      getMissedGroupMessagesRemote(
    String? groupId,
    String? receiverPhoneNumber,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getMissedGroupMessagesRemote,
              [
                groupId,
                receiverPhoneNumber,
              ],
            ),
            returnValue: _i22.Future<
                    _i14
                    .Either<_i41.Failure, List<_i11.GroupMessageEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i11.GroupMessageEntity>>(
              this,
              Invocation.method(
                #getMissedGroupMessagesRemote,
                [
                  groupId,
                  receiverPhoneNumber,
                ],
              ),
            )),
          ) as _i22.Future<
              _i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> saveGroupMessageRemote(
          _i11.GroupMessageEntity? groupMessageItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupMessageRemote,
          [groupMessageItem],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #saveGroupMessageRemote,
            [groupMessageItem],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> updateAllGroupMessagesRemote(
          List<_i11.GroupMessageEntity>? groupMessageItems) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAllGroupMessagesRemote,
          [groupMessageItems],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #updateAllGroupMessagesRemote,
            [groupMessageItems],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [GroupMessageTypeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupMessageTypeRepository extends _i1.Mock
    implements _i20.GroupMessageTypeRepository {
  MockGroupMessageTypeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> existGroupMessageTypeLocal(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #existGroupMessageTypeLocal,
          [messageId],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #existGroupMessageTypeLocal,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>
      getAllGroupMessageTypesLocal(
    String? groupId,
    String? messageId,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAllGroupMessageTypesLocal,
              [
                groupId,
                messageId,
              ],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure,
                        List<_i12.GroupMessageTypeEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i12.GroupMessageTypeEntity>>(
              this,
              Invocation.method(
                #getAllGroupMessageTypesLocal,
                [
                  groupId,
                  messageId,
                ],
              ),
            )),
          ) as _i22.Future<
              _i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i12.GroupMessageTypeEntity>>
      getGroupMessageTypeLocal(String? messageId) => (super.noSuchMethod(
            Invocation.method(
              #getGroupMessageTypeLocal,
              [messageId],
            ),
            returnValue: _i22.Future<
                    _i14
                    .Either<_i41.Failure, _i12.GroupMessageTypeEntity>>.value(
                _FakeEither_12<_i41.Failure, _i12.GroupMessageTypeEntity>(
              this,
              Invocation.method(
                #getGroupMessageTypeLocal,
                [messageId],
              ),
            )),
          ) as _i22
              .Future<_i14.Either<_i41.Failure, _i12.GroupMessageTypeEntity>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> removeGroupMessageTypeLocal(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupMessageTypeLocal,
          [messageId],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #removeGroupMessageTypeLocal,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> saveGroupMessageTypeLocal(
          _i12.GroupMessageTypeEntity? groupMessageTypeItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupMessageTypeLocal,
          [groupMessageTypeItem],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #saveGroupMessageTypeLocal,
            [groupMessageTypeItem],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>
      getAllUnsendGroupMessageTypesLocal(String? receiverPhoneNumber) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAllUnsendGroupMessageTypesLocal,
              [receiverPhoneNumber],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure,
                        List<_i12.GroupMessageTypeEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i12.GroupMessageTypeEntity>>(
              this,
              Invocation.method(
                #getAllUnsendGroupMessageTypesLocal,
                [receiverPhoneNumber],
              ),
            )),
          ) as _i22.Future<
              _i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>
      getAllNotReadGroupMessageTypesLocal(String? groupId) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAllNotReadGroupMessageTypesLocal,
              [groupId],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure,
                        List<_i12.GroupMessageTypeEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i12.GroupMessageTypeEntity>>(
              this,
              Invocation.method(
                #getAllNotReadGroupMessageTypesLocal,
                [groupId],
              ),
            )),
          ) as _i22.Future<
              _i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>
      getAllGroupMessageTypesRemote(
    String? groupId,
    String? messageId,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAllGroupMessageTypesRemote,
              [
                groupId,
                messageId,
              ],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure,
                        List<_i12.GroupMessageTypeEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i12.GroupMessageTypeEntity>>(
              this,
              Invocation.method(
                #getAllGroupMessageTypesRemote,
                [
                  groupId,
                  messageId,
                ],
              ),
            )),
          ) as _i22.Future<
              _i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> removeGroupMessageTypeRemote(
          String? messageId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGroupMessageTypeRemote,
          [messageId],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #removeGroupMessageTypeRemote,
            [messageId],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i12.GroupMessageTypeEntity>>
      getGroupMessageTypeRemote(String? messageId) => (super.noSuchMethod(
            Invocation.method(
              #getGroupMessageTypeRemote,
              [messageId],
            ),
            returnValue: _i22.Future<
                    _i14
                    .Either<_i41.Failure, _i12.GroupMessageTypeEntity>>.value(
                _FakeEither_12<_i41.Failure, _i12.GroupMessageTypeEntity>(
              this,
              Invocation.method(
                #getGroupMessageTypeRemote,
                [messageId],
              ),
            )),
          ) as _i22
              .Future<_i14.Either<_i41.Failure, _i12.GroupMessageTypeEntity>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> saveGroupMessageTypeRemote(
          _i12.GroupMessageTypeEntity? groupMessageTypeItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroupMessageTypeRemote,
          [groupMessageTypeItem],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #saveGroupMessageTypeRemote,
            [groupMessageTypeItem],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> updateAllGroupMessageTypesRemote(
          List<_i12.GroupMessageTypeEntity>? groupMessageTypeItems) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAllGroupMessageTypesRemote,
          [groupMessageTypeItems],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #updateAllGroupMessageTypesRemote,
            [groupMessageTypeItems],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [ExistUserLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockExistUserLocalUseCase extends _i1.Mock
    implements _i42.ExistUserLocalUseCase {
  MockExistUserLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.UserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserRepository_13(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i15.UserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i42.ParamsExistUserLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [GetAllUsersLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllUsersLocalUseCase extends _i1.Mock
    implements _i43.GetAllUsersLocalUseCase {
  MockGetAllUsersLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.UserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserRepository_13(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i15.UserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i7.UserEntity>>> call(
          _i44.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, List<_i7.UserEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i7.UserEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, List<_i7.UserEntity>>>);
}

/// A class which mocks [GetAllUsersRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllUsersRemoteUseCase extends _i1.Mock
    implements _i45.GetAllUsersRemoteUseCase {
  MockGetAllUsersRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.UserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserRepository_13(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i15.UserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i7.UserEntity>>> call(
          _i44.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, List<_i7.UserEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i7.UserEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, List<_i7.UserEntity>>>);
}

/// A class which mocks [GetUserLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetUserLocalUseCase extends _i1.Mock
    implements _i46.GetUserLocalUseCase {
  MockGetUserLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.UserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserRepository_13(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i15.UserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i7.UserEntity>> call(
          _i46.ParamsGetUserLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, _i7.UserEntity>>.value(
                _FakeEither_12<_i41.Failure, _i7.UserEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i7.UserEntity>>);
}

/// A class which mocks [GetUserRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetUserRemoteUseCase extends _i1.Mock
    implements _i47.GetUserRemoteUseCase {
  MockGetUserRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.UserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserRepository_13(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i15.UserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i7.UserEntity>> call(
          _i47.ParamsGetUserRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, _i7.UserEntity>>.value(
                _FakeEither_12<_i41.Failure, _i7.UserEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i7.UserEntity>>);
}

/// A class which mocks [RemoveUserLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveUserLocalUseCase extends _i1.Mock
    implements _i48.RemoveUserLocalUseCase {
  MockRemoveUserLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.UserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserRepository_13(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i15.UserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i48.ParamsRemoveUserLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [SaveUserLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveUserLocalUseCase extends _i1.Mock
    implements _i49.SaveUserLocalUseCase {
  MockSaveUserLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.UserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserRepository_13(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i15.UserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i49.ParamsSaveUserLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [SaveUserRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveUserRemoteUseCase extends _i1.Mock
    implements _i50.SaveUserRemoteUseCase {
  MockSaveUserRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.UserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserRepository_13(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i15.UserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i50.ParamsSaveUserRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [SendSMSVerifyCodeRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSendSMSVerifyCodeRemoteUseCase extends _i1.Mock
    implements _i51.SendSMSVerifyCodeRemoteUseCase {
  MockSendSMSVerifyCodeRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.UserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserRepository_13(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i15.UserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i51.ParamsSendSMSVerifyCodeRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [SetUserLastSeenDateTimeRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSetUserLastSeenDateTimeRemoteUseCase extends _i1.Mock
    implements _i52.SetUserLastSeenDateTimeRemoteUseCase {
  MockSetUserLastSeenDateTimeRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.UserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeUserRepository_13(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i15.UserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i52.ParamsSetUserLastSeenDateTimeRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [ExistMessageLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockExistMessageLocalUseCase extends _i1.Mock
    implements _i53.ExistMessageLocalUseCase {
  MockExistMessageLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.MessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMessageRepository_14(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i16.MessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i53.ParamsExistMessageLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [GetAllMessagesLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllMessagesLocalUseCase extends _i1.Mock
    implements _i54.GetAllMessagesLocalUseCase {
  MockGetAllMessagesLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.MessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMessageRepository_14(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i16.MessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>> call(
          _i54.ParamsGetAllMessagesLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22
            .Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>.value(
            _FakeEither_12<_i41.Failure, List<_i8.MessageEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>);
}

/// A class which mocks [GetAllMessagesRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllMessagesRemoteUseCase extends _i1.Mock
    implements _i55.GetAllMessagesRemoteUseCase {
  MockGetAllMessagesRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.MessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMessageRepository_14(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i16.MessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>> call(
          _i55.ParamsGetAllMessagesRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22
            .Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>.value(
            _FakeEither_12<_i41.Failure, List<_i8.MessageEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>);
}

/// A class which mocks [GetAllNotReadMessagesLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllNotReadMessagesLocalUseCase extends _i1.Mock
    implements _i56.GetAllNotReadMessagesLocalUseCase {
  MockGetAllNotReadMessagesLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.MessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMessageRepository_14(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i16.MessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>> call(
          _i56.ParamsGetAllNotReadMessagesLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22
            .Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>.value(
            _FakeEither_12<_i41.Failure, List<_i8.MessageEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>);
}

/// A class which mocks [GetAllUnsendMessagesLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllUnsendMessagesLocalUseCase extends _i1.Mock
    implements _i57.GetAllUnsendMessagesLocalUseCase {
  MockGetAllUnsendMessagesLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.MessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMessageRepository_14(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i16.MessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>> call(
          _i44.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22
            .Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>.value(
            _FakeEither_12<_i41.Failure, List<_i8.MessageEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>);
}

/// A class which mocks [GetMessageLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMessageLocalUseCase extends _i1.Mock
    implements _i58.GetMessageLocalUseCase {
  MockGetMessageLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.MessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMessageRepository_14(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i16.MessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i8.MessageEntity>> call(
          _i58.ParamsGetMessageLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, _i8.MessageEntity>>.value(
                _FakeEither_12<_i41.Failure, _i8.MessageEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i8.MessageEntity>>);
}

/// A class which mocks [GetMessageRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMessageRemoteUseCase extends _i1.Mock
    implements _i59.GetMessageRemoteUseCase {
  MockGetMessageRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.MessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMessageRepository_14(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i16.MessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i8.MessageEntity>> call(
          _i59.ParamsGetMessageRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, _i8.MessageEntity>>.value(
                _FakeEither_12<_i41.Failure, _i8.MessageEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i8.MessageEntity>>);
}

/// A class which mocks [GetMissedMessagesRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMissedMessagesRemoteUseCase extends _i1.Mock
    implements _i60.GetMissedMessagesRemoteUseCase {
  MockGetMissedMessagesRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.MessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMessageRepository_14(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i16.MessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>> call(
          _i60.ParamsGetMissedMessagesRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22
            .Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>.value(
            _FakeEither_12<_i41.Failure, List<_i8.MessageEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, List<_i8.MessageEntity>>>);
}

/// A class which mocks [RemoveMessageLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveMessageLocalUseCase extends _i1.Mock
    implements _i61.RemoveMessageLocalUseCase {
  MockRemoveMessageLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.MessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMessageRepository_14(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i16.MessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i61.ParamsRemoveMessageLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [RemoveMessageRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveMessageRemoteUseCase extends _i1.Mock
    implements _i62.RemoveMessageRemoteUseCase {
  MockRemoveMessageRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.MessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMessageRepository_14(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i16.MessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i62.ParamsRemoveMessageRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [SaveMessageLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveMessageLocalUseCase extends _i1.Mock
    implements _i63.SaveMessageLocalUseCase {
  MockSaveMessageLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.MessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMessageRepository_14(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i16.MessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i63.ParamsSaveMessageLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [SaveMessageRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveMessageRemoteUseCase extends _i1.Mock
    implements _i64.SaveMessageRemoteUseCase {
  MockSaveMessageRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.MessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMessageRepository_14(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i16.MessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i64.ParamsSaveMessageRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [UpdateAllMessagesRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateAllMessagesRemoteUseCase extends _i1.Mock
    implements _i65.UpdateAllMessagesRemoteUseCase {
  MockUpdateAllMessagesRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.MessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMessageRepository_14(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i16.MessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i65.ParamsUpdateAllMessagesRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [GetAllGroupsLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllGroupsLocalUseCase extends _i1.Mock
    implements _i66.GetAllGroupsLocalUseCase {
  MockGetAllGroupsLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i17.GroupRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupRepository_15(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i17.GroupRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i9.GroupEntity>>> call(
          _i44.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, List<_i9.GroupEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i9.GroupEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, List<_i9.GroupEntity>>>);
}

/// A class which mocks [GetAllGroupsRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllGroupsRemoteUseCase extends _i1.Mock
    implements _i67.GetAllGroupsRemoteUseCase {
  MockGetAllGroupsRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i17.GroupRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupRepository_15(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i17.GroupRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i9.GroupEntity>>> call(
          _i44.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, List<_i9.GroupEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i9.GroupEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, List<_i9.GroupEntity>>>);
}

/// A class which mocks [GetGroupLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetGroupLocalUseCase extends _i1.Mock
    implements _i68.GetGroupLocalUseCase {
  MockGetGroupLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i17.GroupRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupRepository_15(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i17.GroupRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i9.GroupEntity>> call(
          _i68.ParamsGetGroupLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, _i9.GroupEntity>>.value(
                _FakeEither_12<_i41.Failure, _i9.GroupEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i9.GroupEntity>>);
}

/// A class which mocks [GetGroupRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetGroupRemoteUseCase extends _i1.Mock
    implements _i69.GetGroupRemoteUseCase {
  MockGetGroupRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i17.GroupRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupRepository_15(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i17.GroupRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i9.GroupEntity>> call(
          _i69.ParamsGetGroupRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, _i9.GroupEntity>>.value(
                _FakeEither_12<_i41.Failure, _i9.GroupEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i9.GroupEntity>>);
}

/// A class which mocks [RemoveGroupLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveGroupLocalUseCase extends _i1.Mock
    implements _i70.RemoveGroupLocalUseCase {
  MockRemoveGroupLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i17.GroupRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupRepository_15(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i17.GroupRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i70.ParamsRemoveGroupLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [SaveGroupLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveGroupLocalUseCase extends _i1.Mock
    implements _i71.SaveGroupLocalUseCase {
  MockSaveGroupLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i17.GroupRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupRepository_15(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i17.GroupRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i71.ParamsSaveGroupLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [SaveGroupRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveGroupRemoteUseCase extends _i1.Mock
    implements _i72.SaveGroupRemoteUseCase {
  MockSaveGroupRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i17.GroupRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupRepository_15(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i17.GroupRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i72.ParamsSaveGroupRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [GetAllGroupUsersByPhoneNumberRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllGroupUsersByPhoneNumberRemoteUseCase extends _i1.Mock
    implements _i73.GetAllGroupUsersByPhoneNumberRemoteUseCase {
  MockGetAllGroupUsersByPhoneNumberRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.GroupUserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupUserRepository_16(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i18.GroupUserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>> call(
          _i73.ParamsGetAllGroupUsersByPhoneNumberRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<
                _i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>>.value(
            _FakeEither_12<_i41.Failure, List<_i10.GroupUserEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>>);
}

/// A class which mocks [GetAllGroupUsersLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllGroupUsersLocalUseCase extends _i1.Mock
    implements _i74.GetAllGroupUsersLocalUseCase {
  MockGetAllGroupUsersLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.GroupUserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupUserRepository_16(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i18.GroupUserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>> call(
          _i74.ParamsGetAllGroupUsersLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<
                _i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>>.value(
            _FakeEither_12<_i41.Failure, List<_i10.GroupUserEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>>);
}

/// A class which mocks [GetAllGroupUsersRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllGroupUsersRemoteUseCase extends _i1.Mock
    implements _i75.GetAllGroupUsersRemoteUseCase {
  MockGetAllGroupUsersRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.GroupUserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupUserRepository_16(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i18.GroupUserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>> call(
          _i75.ParamsGetAllGroupUsersRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<
                _i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>>.value(
            _FakeEither_12<_i41.Failure, List<_i10.GroupUserEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, List<_i10.GroupUserEntity>>>);
}

/// A class which mocks [GetGroupUserLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetGroupUserLocalUseCase extends _i1.Mock
    implements _i76.GetGroupUserLocalUseCase {
  MockGetGroupUserLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.GroupUserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupUserRepository_16(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i18.GroupUserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i10.GroupUserEntity>> call(
          _i76.ParamsGetGroupUserLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i22.Future<_i14.Either<_i41.Failure, _i10.GroupUserEntity>>.value(
                _FakeEither_12<_i41.Failure, _i10.GroupUserEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i10.GroupUserEntity>>);
}

/// A class which mocks [RemoveGroupUserLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveGroupUserLocalUseCase extends _i1.Mock
    implements _i77.RemoveGroupUserLocalUseCase {
  MockRemoveGroupUserLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.GroupUserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupUserRepository_16(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i18.GroupUserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i77.ParamsRemoveGroupUserLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [RemoveGroupUserRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveGroupUserRemoteUseCase extends _i1.Mock
    implements _i78.RemoveGroupUserRemoteUseCase {
  MockRemoveGroupUserRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.GroupUserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupUserRepository_16(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i18.GroupUserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i78.ParamsRemoveGroupUserRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [SaveGroupUserLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveGroupUserLocalUseCase extends _i1.Mock
    implements _i79.SaveGroupUserLocalUseCase {
  MockSaveGroupUserLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.GroupUserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupUserRepository_16(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i18.GroupUserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i79.ParamsSaveGroupUserLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [SaveGroupUserRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveGroupUserRemoteUseCase extends _i1.Mock
    implements _i80.SaveGroupUserRemoteUseCase {
  MockSaveGroupUserRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.GroupUserRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupUserRepository_16(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i18.GroupUserRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i80.ParamsSaveGroupUserRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [ExistGroupMessageLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockExistGroupMessageLocalUseCase extends _i1.Mock
    implements _i81.ExistGroupMessageLocalUseCase {
  MockExistGroupMessageLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.GroupMessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageRepository_17(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i19.GroupMessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i81.ParamsExistGroupMessageLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [GetAllGroupMessagesLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllGroupMessagesLocalUseCase extends _i1.Mock
    implements _i82.GetAllGroupMessagesLocalUseCase {
  MockGetAllGroupMessagesLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.GroupMessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageRepository_17(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i19.GroupMessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>> call(
          _i82.ParamsGetAllGroupMessagesLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<
                _i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>.value(
            _FakeEither_12<_i41.Failure, List<_i11.GroupMessageEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22
          .Future<_i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>);
}

/// A class which mocks [GetAllGroupMessagesRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllGroupMessagesRemoteUseCase extends _i1.Mock
    implements _i83.GetAllGroupMessagesRemoteUseCase {
  MockGetAllGroupMessagesRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.GroupMessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageRepository_17(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i19.GroupMessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>> call(
          _i83.ParamsGetAllGroupMessagesRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<
                _i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>.value(
            _FakeEither_12<_i41.Failure, List<_i11.GroupMessageEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22
          .Future<_i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>);
}

/// A class which mocks [GetAllUnsendGroupMessagesLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllUnsendGroupMessagesLocalUseCase extends _i1.Mock
    implements _i84.GetAllUnsendGroupMessagesLocalUseCase {
  MockGetAllUnsendGroupMessagesLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.GroupMessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageRepository_17(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i19.GroupMessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>> call(
          _i84.ParamsGetAllUnsendGroupMessagesLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<
                _i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>.value(
            _FakeEither_12<_i41.Failure, List<_i11.GroupMessageEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22
          .Future<_i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>);
}

/// A class which mocks [GetGroupMessageLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetGroupMessageLocalUseCase extends _i1.Mock
    implements _i85.GetGroupMessageLocalUseCase {
  MockGetGroupMessageLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.GroupMessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageRepository_17(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i19.GroupMessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i11.GroupMessageEntity>> call(
          _i85.ParamsGetGroupMessageLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22
            .Future<_i14.Either<_i41.Failure, _i11.GroupMessageEntity>>.value(
            _FakeEither_12<_i41.Failure, _i11.GroupMessageEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i11.GroupMessageEntity>>);
}

/// A class which mocks [GetGroupMessageRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetGroupMessageRemoteUseCase extends _i1.Mock
    implements _i86.GetGroupMessageRemoteUseCase {
  MockGetGroupMessageRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.GroupMessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageRepository_17(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i19.GroupMessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i11.GroupMessageEntity>> call(
          _i86.ParamsGetGroupMessageRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22
            .Future<_i14.Either<_i41.Failure, _i11.GroupMessageEntity>>.value(
            _FakeEither_12<_i41.Failure, _i11.GroupMessageEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i11.GroupMessageEntity>>);
}

/// A class which mocks [GetMissedGroupMessagesRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMissedGroupMessagesRemoteUseCase extends _i1.Mock
    implements _i87.GetMissedGroupMessagesRemoteUseCase {
  MockGetMissedGroupMessagesRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.GroupMessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageRepository_17(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i19.GroupMessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>> call(
          _i87.ParamsGetMissedGroupMessagesRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<
                _i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>.value(
            _FakeEither_12<_i41.Failure, List<_i11.GroupMessageEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22
          .Future<_i14.Either<_i41.Failure, List<_i11.GroupMessageEntity>>>);
}

/// A class which mocks [RemoveGroupMessageLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveGroupMessageLocalUseCase extends _i1.Mock
    implements _i88.RemoveGroupMessageLocalUseCase {
  MockRemoveGroupMessageLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.GroupMessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageRepository_17(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i19.GroupMessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i88.ParamsRemoveGroupMessageLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [RemoveGroupMessageRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveGroupMessageRemoteUseCase extends _i1.Mock
    implements _i89.RemoveGroupMessageRemoteUseCase {
  MockRemoveGroupMessageRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.GroupMessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageRepository_17(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i19.GroupMessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i89.ParamsRemoveGroupMessageRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [SaveGroupMessageLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveGroupMessageLocalUseCase extends _i1.Mock
    implements _i90.SaveGroupMessageLocalUseCase {
  MockSaveGroupMessageLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.GroupMessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageRepository_17(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i19.GroupMessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i90.ParamsSaveGroupMessageLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [SaveGroupMessageRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveGroupMessageRemoteUseCase extends _i1.Mock
    implements _i91.SaveGroupMessageRemoteUseCase {
  MockSaveGroupMessageRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.GroupMessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageRepository_17(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i19.GroupMessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i91.ParamsSaveGroupMessageRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [UpdateAllGroupMessagesRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateAllGroupMessagesRemoteUseCase extends _i1.Mock
    implements _i92.UpdateAllGroupMessagesRemoteUseCase {
  MockUpdateAllGroupMessagesRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.GroupMessageRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageRepository_17(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i19.GroupMessageRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i92.ParamsUpdateAllGroupMessagesRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [ExistGroupMessageTypeLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockExistGroupMessageTypeLocalUseCase extends _i1.Mock
    implements _i93.ExistGroupMessageTypeLocalUseCase {
  MockExistGroupMessageTypeLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.GroupMessageTypeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageTypeRepository_18(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i20.GroupMessageTypeRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i93.ParamsExistGroupMessageTypeLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [GetAllGroupMessageTypesLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllGroupMessageTypesLocalUseCase extends _i1.Mock
    implements _i94.GetAllGroupMessageTypesLocalUseCase {
  MockGetAllGroupMessageTypesLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.GroupMessageTypeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageTypeRepository_18(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i20.GroupMessageTypeRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>
      call(_i94.ParamsGetAllGroupMessageTypesLocalUseCase? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #call,
              [params],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure,
                        List<_i12.GroupMessageTypeEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i12.GroupMessageTypeEntity>>(
              this,
              Invocation.method(
                #call,
                [params],
              ),
            )),
          ) as _i22.Future<
              _i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>);
}

/// A class which mocks [GetAllGroupMessageTypesRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllGroupMessageTypesRemoteUseCase extends _i1.Mock
    implements _i95.GetAllGroupMessageTypesRemoteUseCase {
  MockGetAllGroupMessageTypesRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.GroupMessageTypeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageTypeRepository_18(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i20.GroupMessageTypeRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>
      call(_i95.ParamsGetAllGroupMessageTypesRemoteUseCase? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #call,
              [params],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure,
                        List<_i12.GroupMessageTypeEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i12.GroupMessageTypeEntity>>(
              this,
              Invocation.method(
                #call,
                [params],
              ),
            )),
          ) as _i22.Future<
              _i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>);
}

/// A class which mocks [GetAllNotReadGroupMessageTypesLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllNotReadGroupMessageTypesLocalUseCase extends _i1.Mock
    implements _i96.GetAllNotReadGroupMessageTypesLocalUseCase {
  MockGetAllNotReadGroupMessageTypesLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.GroupMessageTypeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageTypeRepository_18(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i20.GroupMessageTypeRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>
      call(_i96.ParamsGetAllNotReadGroupMessageTypesLocalUseCase? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #call,
              [params],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure,
                        List<_i12.GroupMessageTypeEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i12.GroupMessageTypeEntity>>(
              this,
              Invocation.method(
                #call,
                [params],
              ),
            )),
          ) as _i22.Future<
              _i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>);
}

/// A class which mocks [GetAllUnsendGroupMessageTypesLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllUnsendGroupMessageTypesLocalUseCase extends _i1.Mock
    implements _i97.GetAllUnsendGroupMessageTypesLocalUseCase {
  MockGetAllUnsendGroupMessageTypesLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.GroupMessageTypeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageTypeRepository_18(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i20.GroupMessageTypeRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>
      call(_i97.ParamsGetAllUnsendGroupMessageTypesLocalUseCase? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #call,
              [params],
            ),
            returnValue: _i22.Future<
                    _i14.Either<_i41.Failure,
                        List<_i12.GroupMessageTypeEntity>>>.value(
                _FakeEither_12<_i41.Failure, List<_i12.GroupMessageTypeEntity>>(
              this,
              Invocation.method(
                #call,
                [params],
              ),
            )),
          ) as _i22.Future<
              _i14.Either<_i41.Failure, List<_i12.GroupMessageTypeEntity>>>);
}

/// A class which mocks [GetGroupMessageTypeLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetGroupMessageTypeLocalUseCase extends _i1.Mock
    implements _i98.GetGroupMessageTypeLocalUseCase {
  MockGetGroupMessageTypeLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.GroupMessageTypeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageTypeRepository_18(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i20.GroupMessageTypeRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i12.GroupMessageTypeEntity>> call(
          _i98.ParamsGetGroupMessageTypeLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<
                _i14.Either<_i41.Failure, _i12.GroupMessageTypeEntity>>.value(
            _FakeEither_12<_i41.Failure, _i12.GroupMessageTypeEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i12.GroupMessageTypeEntity>>);
}

/// A class which mocks [GetGroupMessageTypeRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetGroupMessageTypeRemoteUseCase extends _i1.Mock
    implements _i99.GetGroupMessageTypeRemoteUseCase {
  MockGetGroupMessageTypeRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.GroupMessageTypeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageTypeRepository_18(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i20.GroupMessageTypeRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, _i12.GroupMessageTypeEntity>> call(
          _i99.ParamsGetGroupMessageTypeRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<
                _i14.Either<_i41.Failure, _i12.GroupMessageTypeEntity>>.value(
            _FakeEither_12<_i41.Failure, _i12.GroupMessageTypeEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, _i12.GroupMessageTypeEntity>>);
}

/// A class which mocks [RemoveGroupMessageTypeLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveGroupMessageTypeLocalUseCase extends _i1.Mock
    implements _i100.RemoveGroupMessageTypeLocalUseCase {
  MockRemoveGroupMessageTypeLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.GroupMessageTypeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageTypeRepository_18(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i20.GroupMessageTypeRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i100.ParamsRemoveGroupMessageTypeLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [RemoveGroupMessageTypeRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveGroupMessageTypeRemoteUseCase extends _i1.Mock
    implements _i101.RemoveGroupMessageTypeRemoteUseCase {
  MockRemoveGroupMessageTypeRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.GroupMessageTypeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageTypeRepository_18(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i20.GroupMessageTypeRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i101.ParamsRemoveGroupMessageTypeRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [SaveGroupMessageTypeLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveGroupMessageTypeLocalUseCase extends _i1.Mock
    implements _i102.SaveGroupMessageTypeLocalUseCase {
  MockSaveGroupMessageTypeLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.GroupMessageTypeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageTypeRepository_18(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i20.GroupMessageTypeRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i102.ParamsSaveGroupMessageTypeLocalUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [SaveGroupMessageTypeRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveGroupMessageTypeRemoteUseCase extends _i1.Mock
    implements _i103.SaveGroupMessageTypeRemoteUseCase {
  MockSaveGroupMessageTypeRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.GroupMessageTypeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageTypeRepository_18(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i20.GroupMessageTypeRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i103.ParamsSaveGroupMessageTypeRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}

/// A class which mocks [UpdateAllGroupMessageTypesRemoteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateAllGroupMessageTypesRemoteUseCase extends _i1.Mock
    implements _i104.UpdateAllGroupMessageTypesRemoteUseCase {
  MockUpdateAllGroupMessageTypesRemoteUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.GroupMessageTypeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeGroupMessageTypeRepository_18(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i20.GroupMessageTypeRepository);
  @override
  _i22.Future<_i14.Either<_i41.Failure, bool>> call(
          _i104.ParamsUpdateAllGroupMessageTypesRemoteUseCase? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i22.Future<_i14.Either<_i41.Failure, bool>>.value(
            _FakeEither_12<_i41.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i22.Future<_i14.Either<_i41.Failure, bool>>);
}
